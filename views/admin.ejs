<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Admin Panel</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        #messageContainer {
            max-height: 300px;
            overflow-y: scroll;
        }
        .links {
            display: none;
        }
        @media (max-width: 768px) {
            .desktop-only {
                display: none;
            }
        }
    </style>
</head>

<body>
    <%- include('nav') %>
    <div class="container">
        <h1>Admin Panel</h1>
        <button id="contactMessageBtn" class="btn btn-primary">Contact Message <span id="contactMessageCount">0</span></button>
        <div id="messageContainer" style="margin-bottom: 10px;"></div>
        <br>
        <button id="showLinkBtn" class="btn btn-primary">Show links <span id="showLinkCount">0</span></button>
        <div class="links">
            <div class="form-group">
                <label for="optionOption">Option Option:</label>
                <select id="optionOption" class="form-control">
                    <option value="">Select Option</option>
                    <option value="Blog">Blog</option>
                    <option value="Board">Board</option>
                    <option value="GameHacking">GameHacking</option>
                    <option value="Hosting">Hosting</option>
                    <option value="Shop">Shop</option>
                    <option value="Useful">Useful</option>
                    <option value="VPN">VPN</option>
                    <option value="Warez">Warez</option>
                </select>
            </div>

            <div class="form-group">
                <label for="languageOption">Language Option:</label>
                <select id="languageOption" class="form-control">
                    <option value="">Select Language</option>
                    <option value="Albanian">Albanian</option>
                    <option value="Arabic">Arabic</option>
                    <option value="Azerbaijan">Azerbaijan</option>
                    <option value="Chinese">Chinese</option>
                    <option value="Croatia">Croatia</option>
                    <option value="Czech">Czech</option>
                    <option value="Danish">Danish</option>
                    <option value="Dutch">Dutch</option>
                    <option value="English">English</option>
                    <option value="French">French</option>
                    <option value="Georgian">Georgian</option>
                    <option value="German">German</option>
                    <option value="Greek">Greek</option>
                    <option value="Indonesian">Indonesian</option>
                    <option value="Italian">Italian</option>
                    <option value="Japanese">Japanese</option>
                    <option value="Malaysian">Malaysian</option>
                    <option value="N/A">N/A</option>
                    <option value="Persian">Persian</option>
                    <option value="Polish">Polish</option>
                    <option value="Portuguese">Portuguese</option>
                    <option value="Romanian">Romanian</option>
                    <option value="Russian">Russian</option>
                    <option value="Serbian">Serbian</option>
                    <option value="Spanish">Spanish</option>
                    <option value="Thai">Thai</option>
                    <option value="Turkish">Turkish</option>
                    <option value="Ukrainian">Ukrainian</option>
                    <option value="Uzbek">Uzbek</option>
                    <option value="Vietnamese">Vietnamese</option>
                </select>
            </div>

            <button id="filterBtn" class="btn btn-primary">Filter</button>

            <h3>Total Entries: <span id="totalCount">0</span></h3>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Domain</th>
                        <th class="desktop-only">Option</th>
                        <th class="desktop-only">Language</th>
                        <th>Info</th>
                        <th class="desktop-only">Tor</th>
                        <th class="desktop-only">I2P</th>
                        <th class="desktop-only">Blockchain</th>
                        <th class="desktop-only">Twitter</th>
                        <th class="desktop-only">Facebook</th>
                        <th class="desktop-only">Telegram</th>
                        <th class="desktop-only">Discord</th>
                        <th>Add Onsite</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody id="linksTableBody">
                    <!-- Data will be appended here -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const filterBtn = document.getElementById('filterBtn');
            const optionOption = document.getElementById('optionOption');
            const languageOption = document.getElementById('languageOption');
            const totalCountElement = document.getElementById('totalCount');
            const linksTableBody = document.getElementById('linksTableBody');
            const contactMessageBtn = document.getElementById('contactMessageBtn');
            const contactMessageCount = document.getElementById('contactMessageCount');
            const messageContainer = document.getElementById('messageContainer');
            const showLinkBtn = document.getElementById('showLinkBtn');
            const linksDiv = document.querySelector('.links');
    
            // Show links when "Show links" button is clicked
            showLinkBtn.addEventListener('click', function () {
                linksDiv.style.display = 'block';
            });
    
            // Fetch contact message count on page load
            fetchContactMessageCount();
    
            contactMessageBtn.addEventListener('click', function () {
                fetchContactMessages();
            });
    
            filterBtn.addEventListener('click', function () {
                const option = optionOption.value;
                const language = languageOption.value;
    
                // Prepare the data to be sent in the body
                const requestData = {
                    optionOption: option,
                    languageOption: language
                };
    
                fetch('/admin', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                })
                .then(response => response.json())
                .then(data => {
                    // Update total count
                    totalCountElement.textContent = data.totalCount;
    
                    // Clear existing table rows
                    linksTableBody.innerHTML = '';
    
                    // Append new rows
                    data.links.forEach(link => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${link.domain}</td>
                            <td>${link.optionOption}</td>
                            <td>${link.languageOption}</td>
                            <td>${link.info}</td>
                            <td>${link.tor}</td>
                            <td>${link.i2p}</td>
                            <td>${link.blockchain}</td>
                            <td>${link.twitter}</td>
                            <td>${link.facebook}</td>
                            <td>${link.telegram}</td>
                            <td>${link.discord}</td>
                            <td>
                                <button class="btn btn-success add-onsite-btn" data-id="${link._id}" ${link.approved ? 'disabled' : ''}>
                                    ${link.approved ? 'Added' : 'Add Onsite'}
                                </button>
                            </td>
                            <td><button class="btn btn-danger delete-link-btn" data-id="${link._id}">Delete</button></td>
                        `;
                        linksTableBody.appendChild(row);
                    });
    
                    // Attach event listeners to the new buttons
                    document.querySelectorAll('.add-onsite-btn').forEach(button => {
                        button.addEventListener('click', function () {
                            const linkId = this.getAttribute('data-id');
                            updateLinkApproved(linkId, this);
                        });
                    });
    
                    document.querySelectorAll('.delete-link-btn').forEach(button => {
                        button.addEventListener('click', function () {
                            const linkId = this.getAttribute('data-id');
                            deleteLink(linkId);
                        });
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            });
    
            function fetchContactMessageCount() {
                fetch('/contact-message-count')
                    .then(response => response.json())
                    .then(data => {
                        contactMessageCount.textContent = data.count;
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
    
            function fetchContactMessages() {
                fetch('/contact-messages')
                    .then(response => response.json())
                    .then(data => {
                        messageContainer.innerHTML = '';
                        data.messages.forEach(message => {
                            console.log(message);
                            const messageElement = document.createElement('div');
                            messageElement.classList.add('card', 'mb-3');
                            messageElement.innerHTML = `
                                <div class="card-body">
                                    <h5 class="card-title"><strong>Subject:</strong> ${message.subject}</h5>
                                    <p class="card-text"><strong>Message:</strong> ${message.message}</p>
                                    <p class="card-text"><strong>Name:</strong> ${message.name}</p>
                                    <p class="card-text"><strong>Email:</strong> <a href="mailto:${message.email}">${message.email}</a></p>
                                    ${message.read ? '' : `<button class="btn btn-primary mark-as-read-btn" data-id="${message._id}">Mark as Read</button>`}
                                    <hr class="solid" style="border-top: 3px solid #bbb;">
                                </div>
                            `;
                            messageContainer.appendChild(messageElement);
                        });
                        document.querySelectorAll('.mark-as-read-btn').forEach(button => {
                            button.addEventListener('click', function () {
                                const messageId = this.getAttribute('data-id');
                                markMessageAsRead(messageId);
                            });
                        });
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
    
            function markMessageAsRead(messageId) {
                // Send POST request to mark message as read
                fetch(`/mark-as-read/${messageId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                        
                    },
                    body: JSON.stringify({ read: true }) // Assuming the server expects a JSON body with a 'read' field
                })
                .then(response => response.json())
                .then(data => {
                    fetchContactMessageCount();
                    fetchContactMessages();
                    // Handle response if needed
                    console.log('Message marked as read:', data);
                    // Optionally, update UI to reflect the change
                })
                .catch(error => {
                    console.error('Error marking message as read:', error);
                });
            }
    
            function updateLinkApproved(linkId, button) {
                fetch(`/update-link/${linkId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ approved: true })
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Link approved:', data);
                    // Disable button and change text to "Added"
                    button.textContent = 'Added';
                    button.disabled = true;
                })
                .catch(error => {
                    console.error('Error updating link:', error);
                });
            }
    
            function deleteLink(linkId) {
                fetch(`/delete-link/${linkId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Link deleted:', data);
                    // Optionally, update UI to reflect the change
                    filterBtn.click(); // Refresh the table
                })
                .catch(error => {
                    console.error('Error deleting link:', error);
                });
            }
        });
    </script>
    
</body>

</html>

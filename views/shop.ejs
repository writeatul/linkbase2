<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        body {
            background-color: white !important;
        }

        .link-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            position: relative;
        }

        .link-item::before {
            content: '\f111';
            /* FontAwesome icon code for circle */
            font-family: FontAwesome;
            margin-right: 10px;
            color: green;
        }

        .link-item a {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 80%;
            /* Adjust as necessary */
            text-decoration: none;
            color: black;
        }

        .link-item a.full {
            white-space: normal;
            overflow: visible;
        }

        .link-divider {
            height: 2px;
            background-color: #ccc;
            margin: 5px 0 10px 0;
        }

        h5.link-divider {
            font-size: 1.25rem;
            color: #333;
            border-bottom-width: 2px;
            /* Slightly thicker for headings */
        }

        .container-custom {
            max-width: 900px;
            /* Adjust the max-width as necessary */
            margin: 0 auto;
        }
    </style>
</head>

<body>
    <%- include('nav') %>

        <div class="container container-custom mt-5">
            <!-- <h3 style="text-align: center; text-decoration: underline;">Security and Hacking blog</h3> -->
            <div class="breadcrumbs" style="display: flex; align-items: center; background-color: #f4f4f4; padding: 4px;">
                <ul style="list-style: none; display: flex; margin: 0; padding: 0;">
                    <li style="margin-right: 5px;">
                        <a href="/" style="text-decoration: none; color: #000;">Home</a>
                        <i class="fa fa-angle-right" style="margin-left: 5px; margin-right: 5px;"></i>
                    </li>
                    <li>
                        <a href="/shop" style="text-decoration: none; color: #000;">shops</a>
                    </li>
                </ul>
            </div>
            
            <div id="links-container" class="row">
                <!-- The data will be dynamically populated here -->
            </div>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', async () => {
                const response = await fetch('/getshops');
                const data = await response.json();
                const linksContainer = document.getElementById('links-container');
                const languageMap = {};

                // Map of language options to flag emojis
                const flagMap = {
                    "English": "🇬🇧",
                    "German": "🇩🇪",
                    "Russian": "🇷🇺",
                    "Albanian": "🇦🇱",
                    "Arabic": "🇸🇦",
                    "Azerbaijan": "🇦🇿",
                    "Chinese": "🇨🇳",
                    "Croatia": "🇭🇷",
                    "Czech": "🇨🇿",
                    "Danish": "🇩🇰",
                    "Dutch": "🇳🇱",
                    "French": "🇫🇷",
                    "Georgian": "🇬🇪",
                    "Greek": "🇬🇷",
                    "Indonesian": "🇮🇩",
                    "Italian": "🇮🇹",
                    "Japanese": "🇯🇵",
                    "Malaysian": "🇲🇾",
                    "Persian": "🇮🇷",
                    "Polish": "🇵🇱",
                    "Portuguese": "🇵🇹",
                    "Romanian": "🇷🇴",
                    "Serbian": "🇷🇸",
                    "Spanish": "🇪🇸",
                    "Thai": "🇹🇭",
                    "Turkish": "🇹🇷",
                    "Ukrainian": "🇺🇦",
                    "Uzbek": "🇺🇿",
                    "Vietnamese": "🇻🇳",
                    "N/A": "❓"
                };

                data.shopsdata.forEach(blog => {
                    const languageOption = blog.languageOption;
                    const flag = flagMap[languageOption] || "";

                    if (!languageMap[languageOption]) {
                        // Create a new section for the language
                        const colDiv = document.createElement('div');
                        colDiv.className = 'col-12 col-md-6 col-lg-3';

                        const h5Tag = document.createElement('h5');
                        h5Tag.textContent = `${languageOption} ${flag}`;
                        h5Tag.style.fontWeight = '600';

                        const linksDiv = document.createElement('div');
                        linksDiv.className = 'links';

                        colDiv.appendChild(h5Tag);
                        colDiv.appendChild(linksDiv);
                        linksContainer.appendChild(colDiv);

                        languageMap[languageOption] = linksDiv;
                    }

                    // Create and append the link item
                    const linkItem = document.createElement('div');
                    linkItem.className = 'link-item';

                    const link = document.createElement('a');
                    link.href = blog.domain;
                    link.target = '_blank'; // Open link in new tab
                    link.textContent = blog.domainName;
                    link.title = blog.domain; // Show full link on hover

                    link.addEventListener('click', (e) => {
                        if (link.classList.contains('full')) {
                            return;
                        }
                        e.preventDefault();
                        link.classList.toggle('full');
                    });

                    // Add a divider line below each link item
                    const divider = document.createElement('div');
                    divider.className = 'link-divider';
                    languageMap[languageOption].appendChild(divider);

                    linkItem.appendChild(link);
                    languageMap[languageOption].appendChild(linkItem);

                });

                // Event listener to collapse expanded links when clicking outside
                document.addEventListener('click', (event) => {
                    const expandedLinks = document.querySelectorAll('.link-item a.full');
                    expandedLinks.forEach(link => {
                        if (!link.contains(event.target)) {
                            link.classList.remove('full');
                        }
                    });
                });
            });
        </script>
</body>

</html>
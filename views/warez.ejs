<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Warez</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    
    <style>
        .link-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
            position: relative;
        }

        .link-item::before {
            content: '\f0da'; /* FontAwesome icon code for list item */
            font-family: FontAwesome;
            margin-right: 10px;
        }

        .link-item a {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 80%; /* Adjust as necessary */
            text-decoration: none;
        }

        .link-item a.full {
            white-space: normal;
            overflow: visible;
        }

        .link-divider {
            height: 1px;
            background-color: #ccc;
            margin: 5px 0 10px 0;
        }
    </style>
</head>

<body>
    <%- include('nav') %>

    <div class="container mt-5">
        <h3 style="text-align: center;">Warez</h3>
        <div id="links-container" class="row">
            <!-- The data will be dynamically populated here -->
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const response = await fetch('/getwarez');
            const data = await response.json();
            const linksContainer = document.getElementById('links-container');
            const languageMap = {};

            // Map of language options to flag emojis
            const flagMap = {
                "English": "🇬🇧",
                "German": "🇩🇪",
                "Russian": "🇷🇺",
                "Albanian":"🇦🇱",
                "Arabic": "🇸🇦",
                "Azerbaijan": "🇦🇿",
                "Chinese": "🇨🇳",
                "Croatia": "🇭🇷",
                "Czech": "🇨🇿",
                "Danish": "🇩🇰",
                "Dutch": "🇳🇱",
                "French": "🇫🇷",
                "Georgian": "🇬🇪",
                "Greek": "🇬🇷",
                "Indonesian": "🇮🇩",
                "Italian": "🇮🇹",
                "Japanese": "🇯🇵",
                "Malaysian": "🇲🇾",
                "Persian": "🇮🇷",
                "Polish": "🇵🇱",
                "Portuguese": "🇵🇹",
                "Romanian": "🇷🇴",
                "Serbian": "🇷🇸",
                "Spanish": "🇪🇸",
                "Thai": "🇹🇭",
                "Turkish": "🇹🇷",
                "Ukrainian": "🇺🇦",
                "Uzbek": "🇺🇿",
                "Vietnamese": "🇻🇳",
                "N/A": "❓"
            };

            data.warezsdata.forEach(blog => {
                const languageOption = blog.languageOption;
                const flag = flagMap[languageOption] || "";

                if (!languageMap[languageOption]) {
                    // Create a new section for the language
                    const colDiv = document.createElement('div');
                    colDiv.className = 'col-12 col-md-6 col-lg-4';

                    const h5Tag = document.createElement('h3');
                    h5Tag.textContent = `${languageOption} ${flag}`;
                    
                    const linksDiv = document.createElement('div');
                    linksDiv.className = 'links';

                    colDiv.appendChild(h5Tag);
                    colDiv.appendChild(linksDiv);

                    linksContainer.appendChild(colDiv);
                    languageMap[languageOption] = linksDiv;
                }

                // Create and append the link item
                const linkItem = document.createElement('div');
                linkItem.className = 'link-item';

                const link = document.createElement('a');
                link.href = blog.domain;
                link.target = '_blank'; // Open link in new tab
                link.textContent = blog.domain;
                link.title = blog.domain; // Show full link on hover

                link.addEventListener('click', (e) => {
                    if (link.classList.contains('full')) {
                        return;
                    }
                    e.preventDefault();
                    link.classList.toggle('full');
                });

                linkItem.appendChild(link);
                languageMap[languageOption].appendChild(linkItem);

                // Add a divider line below each link item
                const divider = document.createElement('div');
                divider.className = 'link-divider';
                languageMap[languageOption].appendChild(divider);
            });

            // Event listener to collapse expanded links when clicking outside
            document.addEventListener('click', (event) => {
                const expandedLinks = document.querySelectorAll('.link-item a.full');
                expandedLinks.forEach(link => {
                    if (!link.contains(event.target)) {
                        link.classList.remove('full');
                    }
                });
            });
        });
    </script>
</body>

</html>
